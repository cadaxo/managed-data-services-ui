<mvc:View controllerName="com.cadaxo.cmds.controller.App"
    xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns="sap.m" 
	xmlns:layout="sap.suite.ui.commons.networkgraph.layout" xmlns:l="sap.ui.layout" xmlns:g="sap.suite.ui.commons.networkgraph">
	<Shell id="shell" appWidthLimited="false">
		<App id="app">
			<pages>
				<Page id="page" title="{i18n>title}">
					<customHeader>
						<Bar>
							<contentLeft>
								<Image height="40px" src="{imageModel>/cadaxoLogo}"></Image>
								<Text class="cadaxoHeaderText" text = "{i18n>headerText}"></Text>
							</contentLeft>
						</Bar>	
					</customHeader>
					<content>
						<FlexBox fitContainer="true" renderType="Bare" wrap="Wrap" id="graphWrapper">
						
							<g:Graph enableWheelZoom="false"
								enableZoom="true"
								nodes="{graphModel>/nodes}"
								id="graph"
								lines="{graphModel>/links}"
								noDataText="{i18n>noData}"
								width="auto"
								orientation="{graphLayoutModel>/orientation}"
								statuses="{graphModel>/statuses}">
								<g:layoutAlgorithm>
									<!--layout:LayeredLayout nodePlacement="{graphLayoutModel>/nodePlacement}" nodeSpacing="{graphLayoutModel>/nodeSpacing}" /-->
									<layout:ForceDirectedLayout
										optimalDistanceConstant="0.26"
										>
									</layout:ForceDirectedLayout>
								</g:layoutAlgorithm>
								<g:statuses>
									<g:Status key="{graphModel>StatusKey}"
									title="{graphModel>Description}"
									backgroundColor="{graphModel>Color2}"
									contentColor="{graphModel>Color1}">
									</g:Status>
								</g:statuses>
								<g:nodes>
									<g:Node key="{graphModel>DsId}" title="{graphModel>ObjectName}"
										icon="{
												path: 'graphModel>ObjectType',
												formatter: '.formatter.setNodeIcon'
										}"  
										showActionLinksButton="false"
										showDetailButton="false"
										showExpandButton="false"
										shape="Circle"
										width="300"
										status="{parts: [
											'graphModel>ObjectType', 'graphModel>ObjectState'
											],
											formatter: '.formatter.setNodeStatus'
										}"
										press="onNodePressed">
										<g:customData>
											<core:CustomData key="isRoot" value="{graphModel>isRoot}"/>
										</g:customData>
										<!--g:actionButtons>
											<g:ActionButton
													icon="sap-icon://navigation-left-arrow"
													title="{i18n>showParentNodes}"
													position="Left"
													press="leftExpandPressed"/>
											<g:ActionButton
													icon="sap-icon://navigation-right-arrow"
													title="{i18n>showChildNodes}"
													press="rightExpandPressed"/>
											<g:ActionButton
												icon="sap-icon://open-command-field"
												title="Expand All"
												press="rightMultiExpandPressed"/>	
											<g:ActionButton
													icon="sap-icon://close-command-field"
													title="Expand All"
													position="Left"
													press="leftMultiExpandPressed"/>		
										</g:actionButtons-->
									</g:Node>

								</g:nodes>
								<g:lines>
								<g:Line 
									from="{graphModel>ObjectId1}" 
									to="{graphModel>ObjectId2}"
									press="linePressed"
									status="{parts: [
											'graphModel>Type'
											],
											formatter: '.formatter.setLineStatus'
										}"
									title="{graphModel>Description}"
									arrowOrientation="None">
								</g:Line>
							</g:lines>
						
							</g:Graph>
							<Panel visible="false" width="40%" height="100%" id="sideBar-panel">
								<headerToolbar>
									<OverflowToolbar>
										<Title text="{ObjectName}"/>
										<Title text="- {Description}"/>
										<ToolbarSpacer />
										<Button  icon="sap-icon://home" tooltip="Set as Main Node" enabled="true" press="setMainNodePress">									
										</Button>
										<Button  icon="sap-icon://tree" tooltip="Show in Freestyle Mode" enabled="true">									
										</Button>										
										
										<!--Button press="whereUsedPressed" id="btn-show-where-used" text="{i18n>showWhereUsed}" enabled="false" /-->
										<Button press="viewInBrowserPressed" icon="sap-icon://detail-view" tooltip="{i18n>showSourceCode}" enabled="{=${ActionLink/Display}.length !== 0}">
											<customData>
												<core:CustomData key="url" value="{ActionLink/Display}"/>
											</customData>
										</Button>
										<Button press="viewInAdtPressed" icon="sap-icon://edit-outside" tooltip="{i18n>showSourceCodeAdt}" enabled="{=${ActionLink/Edit}.length !== 0}">
											<customData>
												<core:CustomData key="url" value="{ActionLink/Edit}"/>
											</customData>										
										</Button>
										<Button press="hideSidebarPressed" icon="sap-icon://navigation-right-arrow" tooltip="{i18n>closeSidebar}" enabled="true">									
										</Button>
									</OverflowToolbar>
								</headerToolbar>
								<infoToolbar>
									<OverflowToolbar id="toolbar" active="false" design="Info" height="2rem" press="onToolbarPress"  ariaLabelledBy="myText">
										
										<Text id="myText" text="Mode: Show CDS View Sources"/>
										<ToolbarSpacer/>
																				<Button tooltip="Display Field Source for selected Field"  type="Transparent" press="getFieldSourcePressed" id="btn-show-source" text="Display Field Source" enabled="false" />
										<Button tooltip="Display Field Target for selected Field"  type="Transparent" press="getTargetPressed" id="btn-show-target" text="Display Field Target" enabled="false" />
										<Button tooltip="Set as Main Node"  type="Transparent" press="getExpandPressed" id="btn-expand-object" text="Set as Main Node" enabled="false" />
										<Button tooltip="Display Field Source for selected Field"  type="Transparent" press="getFieldSourcePressed" id="btn-show-source-add" text="Display Field Source + all related objects" enabled="false" />
										<Button tooltip="Display Field Source for selected Field"  type="Transparent" press="getTargetPressed" id="btn-show-target-add" text="Display Field Target + all related objects" enabled="false" />
									</OverflowToolbar>
								</infoToolbar>								
								<content>
									<!--OverflowToolbar id="toolbar-buttons">
										<Button icon="sap-icon://hint" type="Transparent" press="handlePopoverPress" />

										<ToolbarSpacer/>
									</OverflowToolbar-->
									<TabContainer id="tabs" itemSelect="tabChanged">
										<items>
											<TabContainerItem name="{i18n>fields}">
												<content>
													<Toolbar>
														<ToolbarSpacer />
														<SearchField
															id="tree-fields-search-field"
															search=".onSearch"
															width="auto">
															<customData>
																<core:CustomData key="searchFor" value="tree-fields"/>
															</customData>
														</SearchField>
													</Toolbar>
													<FlexBox id="fields-header">
														<items>
															<Text id="fields-header-column1" width="170px" text="{i18n>column}">
															<layoutData>
																<FlexItemData growFactor="1" />
															</layoutData>
															</Text>
															<Text id="fields-header-column2" width="145px" text="{i18n>dataElement}">
															<layoutData>
																<FlexItemData growFactor="1" />
															</layoutData>
															</Text>
															<Text id="fields-header-column3" width="100px" text="{i18n>dataType}">
															<layoutData>
																<FlexItemData growFactor="1" />
															</layoutData>
															</Text>
															<Text id="fields-header-column4" width="150px" text="{i18n>description}">
															<layoutData>
																<FlexItemData growFactor="1" />
															</layoutData>
															</Text>
														</items>
													</FlexBox>
													<Tree itemPress="fieldPressed" id="tree-fields" items="{
														      path: 'nodeDetail>/fields',
													          parameters: {
            													operationMode: 'Client',
            													useServersideApplicationFilters: false,
																searchFor: 'tree-fields'
          													  },
																events: {
																	change: '.onTreeChange'
																}																
															}"
													mode="SingleSelectMaster"
													>	
														<items>
														<CustomTreeItem type="Active">
															<customData>
																<core:CustomData key="fieldName" value="{nodeDetail>text}"/>
															</customData>
															<FlexBox alignItems="Start" width="100%">
																<items>
																	<core:Icon class="cadaxoCustomIcon" src="sap-icon://key" size="1rem" visible="{= ${nodeDetail>isKey} === true }" 
																	tooltip="{i18n>primaryKey}" />
																	<core:Icon class="cadaxoCustomIcon" src="sap-icon://rhombus-milestone" size="1rem" visible="{= ${nodeDetail>isIntType} === true }" 
																	tooltip="{i18n>internalType}" />
																	<Text width="150px" text="{parts: [
																		'nodeDetail>text', 'nodeDetail>isWhereUsed'
																		], formatter:'externFormatter.setHighlighted'}">
																	<layoutData>
																		<FlexItemData growFactor="1" />
																	</layoutData>
																	</Text>
																	
																	<Text visible="{= ${nodeDetail>isField} === true }" width="145px" text="{nodeDetail>dataelement}">
																	<layoutData>
																		<FlexItemData growFactor="1" />
																	</layoutData>
																	</Text>				
																	<Text visible="{= ${nodeDetail>isField} === true }" width="90px" text="{nodeDetail>datatype}">
																	<layoutData>
																		<FlexItemData growFactor="1" />
																	</layoutData>
																	</Text>																														
																	<Text visible="{= ${nodeDetail>isField} === true }" width="150px" text="{nodeDetail>description}">
																	<layoutData>
																		<FlexItemData growFactor="1" />
																	</layoutData>
																	</Text>	
																	<Text visible="{= ${nodeDetail>isField} === false }" width="100%" textAlign="Begin" text="{nodeDetail>value}" >
																	<layoutData>
																		<FlexItemData growFactor="1" />
																	</layoutData>
																	</Text>
																</items>
															</FlexBox>
														</CustomTreeItem>
														</items>
													</Tree>
												</content>
											</TabContainerItem>
											<TabContainerItem name="{i18n>headerAnnotations}">
												<content>
													<Table id="headerAnnotations"
														inset="false"
														items="{nodeDetail>/headerAnnotations}">
														<headerToolbar>
															<Toolbar>
																<ToolbarSpacer />
																<SearchField
																	id="headerAnnotations-search-field"
																	search=".onSearch"
																	width="auto">
																	<customData>
																		<core:CustomData key="searchFor" value="headerAnnotations"/>
																	</customData>
																</SearchField>
															</Toolbar>
														</headerToolbar>
														<columns>
															<Column width="70%">
																<Text text="{i18n>name}" />
															</Column>
															<Column width="30%">
																<Text text="{i18n>value}" />
															</Column>
														</columns>
														<items>
															<ColumnListItem>
																<cells>
																	<Text text="{nodeDetail>text}"/>
																	<Text text="{nodeDetail>value}" />
																</cells>
															</ColumnListItem>
														</items>
													</Table>
												</content>
											</TabContainerItem>
											<TabContainerItem name="{i18n>parameters}">
												<content>
														<Table id="parameters"
															inset="false"
															items="{
																path: 'nodeDetail>/parameters',
																sorter: {
																	path: 'Position'
																}
															}">
															<headerToolbar>
																<Toolbar>
																	<ToolbarSpacer />
																	<SearchField
																		id="parameters-search-field"
																		search=".onSearch"
																		width="auto">
																		<customData>
																			<core:CustomData key="searchFor" value="parameters"/>
																		</customData>
																	</SearchField>
																</Toolbar>
															</headerToolbar>															
															<columns>
																<Column width="60%">
																	<Text text="{i18n>parameter}" />
																</Column>
																<Column width="20%">
																	<Text text="{i18n>dataElement}" />
																</Column>
																<Column width="20%">
																	<Text text="{i18n>dataType}" />
																</Column>
															</columns>
															<items>
																<ColumnListItem>
																	<cells>
																		<Text text="{nodeDetail>Description}"/>
																		<Text text="{nodeDetail>DataElement}"/>
																		<Text text="{nodeDetail>Datatype}" />
																	</cells>
																</ColumnListItem>
															</items>
														</Table>
												</content>
											</TabContainerItem>
											
										</items>
									</TabContainer>
									<Table id="root-detail"
										inset="false"
										items="{
											path: 'rootDetail>/fields'
										}"
										mode="SingleSelectMaster"
										selectionChange="rootDetailFieldPressed">
										<headerToolbar>
											<Toolbar>
												<ToolbarSpacer />
												<SearchField
													id="root-detail-search-field"
													search=".onSearch"
													width="auto">
													<customData>
														<core:CustomData key="searchFor" value="root-detail"/>
													</customData>
												</SearchField>
											</Toolbar>
										</headerToolbar>										
										<columns>
											<Column width="40%">
												<Text text="{i18n>name}" />
											</Column>
											<Column width="60%">
												<Text text="{i18n>description}" />
											</Column>
											<Column width="60%" visible="false">
												<Text text="{i18n>type}" />
											</Column>											
										</columns>
										<items>
											<ColumnListItem>
												<cells>
													<Text text="{rootDetail>ObjectName}"/>
													<Text text="{rootDetail>Description}"/>
													<Text text="{rootDetail>ObjectType}"/>
												</cells>
											</ColumnListItem>
										</items>
									</Table>
								</content>
						
							</Panel>
						</FlexBox>
          			</content>
				</Page>
			</pages>
		</App>
	</Shell>
</mvc:View>